{"version":3,"sources":["../node_modules/react-bootstrap/esm/SelectableContext.js","../node_modules/react-bootstrap/esm/NavContext.js","../node_modules/react-bootstrap/esm/DropdownItem.js","../node_modules/react-bootstrap/esm/ButtonGroup.js","../node_modules/dom-helpers/esm/matches.js","../node_modules/react-overlays/esm/DropdownContext.js","../node_modules/react-overlays/esm/DropdownMenu.js","../node_modules/react-overlays/esm/DropdownToggle.js","../node_modules/react-overlays/esm/Dropdown.js","../node_modules/@restart/hooks/esm/useForceUpdate.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/react-bootstrap/esm/NavbarContext.js","../node_modules/react-bootstrap/esm/useWrappedRefWithWarning.js","../node_modules/react-bootstrap/esm/DropdownMenu.js","../node_modules/react-bootstrap/esm/DropdownToggle.js","../node_modules/react-bootstrap/esm/Dropdown.js","../node_modules/react-bootstrap/esm/DropdownButton.js"],"names":["SelectableContext","React","createContext","makeEventKey","eventKey","href","String","NavContext","defaultProps","as","SafeAnchor","disabled","DropdownItem","forwardRef","_ref","ref","bsPrefix","className","children","onClick","onSelect","propActive","active","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","onSelectCtx","useContext","activeKey","key","handleClick","useEventCallback","event","createElement","_extends","classNames","displayName","ButtonGroup","size","toggle","vertical","_props$as","rest","baseClass","role","matchesImpl","DropdownContext","menuRef","toggleRef","onToggle","toggleNode","undefined","alignEnd","show","drop","useDropdownMenu","options","_modifiers$arrow","context","_useCallbackRef","useCallbackRef","arrowElement","attachArrowRef","hasShownRef","useRef","_options","flip","rootCloseEvent","_options$popperConfig","popperConfig","_options$usePopper","usePopper","shouldUsePopper","current","handleClose","e","setMenu","menuElement","toggleElement","placement","modifiers","toModifierMap","popper","enabled","eventListeners","arrow","element","menu","menuProps","id","childArgs","hasShown","close","style","styles","arrowProps","arrowStyles","useRootClose","clickTrigger","propTypes","PropTypes","func","isRequired","bool","oneOf","object","string","DropdownMenu","args","useDropdownToggle","_useContext","setToggle","DropdownToggle","_useDropdownToggle","_useDropdownToggle$","focusFirstItemOnShow","itemSelector","defaultShow","Dropdown","rawShow","rawOnToggle","forceUpdate","useReducer","state","_useUncontrolled","useUncontrolled","useCallback","lastShow","value","useEffect","usePrevious","lastSourceEvent","focusInDropdown","useMemo","contains","document","activeElement","focusToggle","focus","maybeFocusFirst","type","focusType","node","selector","body","nativeMatch","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","n","s","call","test","first","qsa","getNextFocusedChild","offset","items","index","indexOf","Math","max","min","length","Provider","onKeyDown","target","tagName","next","preventDefault","_next","Menu","Toggle","useWrappedRefWithWarning","componentName","alignRight","showProps","_ref$as","isNavbar","NavbarContext","_useDropdownMenu","useMergedRefs","split","childBsPrefix","Button","toggleProps","uncontrolledProps","_useUncontrolled$as","navbar","handleToggle","nextShow","source","currentTarget","handleSelect","BaseDropdown","dropdownProps","Item","Header","createWithBsPrefix","Divider","any","title","menuRole","variant","DropdownButton"],"mappings":"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","file":"static/js/9.8ed6f5fd.chunk.js","sourcesContent":["import React from 'react';\nvar SelectableContext = React.createContext();\nexport var makeEventKey = function makeEventKey(eventKey, href) {\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","import React from 'react';\nvar NavContext = React.createContext(null);\nexport default NavContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport SafeAnchor from './SafeAnchor';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavContext from './NavContext';\nvar defaultProps = {\n  as: SafeAnchor,\n  disabled: false\n};\nvar DropdownItem = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      onClick = _ref.onClick,\n      onSelect = _ref.onSelect,\n      propActive = _ref.active,\n      Component = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"children\", \"eventKey\", \"disabled\", \"href\", \"onClick\", \"onSelect\", \"active\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-item');\n  var onSelectCtx = useContext(SelectableContext);\n  var navContext = useContext(NavContext);\n\n  var _ref2 = navContext || {},\n      activeKey = _ref2.activeKey;\n\n  var key = makeEventKey(eventKey, href);\n  var active = propActive == null && key != null ? makeEventKey(activeKey) === key : propActive;\n  var handleClick = useEventCallback(function (event) {\n    // SafeAnchor handles the disabled case, but we handle it here\n    // for other components\n    if (disabled) return;\n    if (onClick) onClick(event);\n    if (onSelectCtx) onSelectCtx(key, event);\n    if (onSelect) onSelect(key, event);\n  });\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    href: href,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', disabled && 'disabled'),\n    onClick: handleClick\n  }), children);\n});\nDropdownItem.displayName = 'DropdownItem';\nDropdownItem.defaultProps = defaultProps;\nexport default DropdownItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  vertical: false,\n  toggle: false,\n  role: 'group'\n};\nvar ButtonGroup = React.forwardRef(function (props, ref) {\n  var bsPrefix = props.bsPrefix,\n      size = props.size,\n      toggle = props.toggle,\n      vertical = props.vertical,\n      className = props.className,\n      _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      rest = _objectWithoutPropertiesLoose(props, [\"bsPrefix\", \"size\", \"toggle\", \"vertical\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  var baseClass = prefix;\n  if (vertical) baseClass = prefix + \"-vertical\";\n  return React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classNames(className, baseClass, size && prefix + \"-\" + size, toggle && prefix + \"-toggle\")\n  }));\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","var matchesImpl;\nexport default function matches(node, selector) {\n  if (!matchesImpl) {\n    var body = document.body;\n    var nativeMatch = body.matches || body.matchesSelector || body.webkitMatchesSelector || body.mozMatchesSelector || body.msMatchesSelector;\n\n    matchesImpl = function matchesImpl(n, s) {\n      return nativeMatch.call(n, s);\n    };\n  }\n\n  return matchesImpl(node, selector);\n}","import React from 'react';\nvar DropdownContext = React.createContext({\n  menuRef: function menuRef() {},\n  toggleRef: function toggleRef() {},\n  onToggle: function onToggle() {},\n  toggleNode: undefined,\n  alignEnd: null,\n  show: null,\n  drop: null\n});\nexport default DropdownContext;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport { useContext, useRef } from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper, { toModifierMap } from './usePopper';\nimport useRootClose from './useRootClose';\nexport function useDropdownMenu(options) {\n  var _modifiers$arrow;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var context = useContext(DropdownContext);\n\n  var _useCallbackRef = useCallbackRef(),\n      arrowElement = _useCallbackRef[0],\n      attachArrowRef = _useCallbackRef[1];\n\n  var hasShownRef = useRef(false);\n  var _options = options,\n      flip = _options.flip,\n      rootCloseEvent = _options.rootCloseEvent,\n      _options$popperConfig = _options.popperConfig,\n      popperConfig = _options$popperConfig === void 0 ? {} : _options$popperConfig,\n      _options$usePopper = _options.usePopper,\n      shouldUsePopper = _options$usePopper === void 0 ? true : _options$usePopper;\n  var show = context.show == null ? options.show : context.show;\n  var alignEnd = context.alignEnd == null ? options.alignEnd : context.alignEnd;\n\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n\n  var handleClose = function handleClose(e) {\n    if (!context.toggle) return;\n    context.toggle(false, e);\n  };\n\n  var drop = context.drop,\n      setMenu = context.setMenu,\n      menuElement = context.menuElement,\n      toggleElement = context.toggleElement;\n  var placement = alignEnd ? 'bottom-end' : 'bottom-start';\n  if (drop === 'up') placement = alignEnd ? 'top-end' : 'top-start';else if (drop === 'right') placement = alignEnd ? 'right-end' : 'right-start';else if (drop === 'left') placement = alignEnd ? 'left-end' : 'left-start';\n  var modifiers = toModifierMap(popperConfig.modifiers);\n  var popper = usePopper(toggleElement, menuElement, _extends({}, popperConfig, {\n    placement: placement,\n    enabled: !!(shouldUsePopper && show),\n    modifiers: _extends({}, modifiers, {\n      eventListeners: {\n        enabled: !!show\n      },\n      arrow: _extends({}, modifiers.arrow, {\n        enabled: !!arrowElement,\n        options: _extends({}, (_modifiers$arrow = modifiers.arrow) == null ? void 0 : _modifiers$arrow.options, {\n          element: arrowElement\n        })\n      }),\n      flip: _extends({\n        enabled: !!flip\n      }, modifiers.flip)\n    })\n  }));\n  var menu = null;\n  var menuProps = {\n    ref: setMenu,\n    'aria-labelledby': toggleElement && toggleElement.id\n  };\n  var childArgs = {\n    show: show,\n    alignEnd: alignEnd,\n    hasShown: hasShownRef.current,\n    close: handleClose\n  };\n\n  if (!shouldUsePopper) {\n    menu = _extends({}, childArgs, {\n      props: menuProps\n    });\n  } else {\n    menu = _extends({}, popper, {}, childArgs, {\n      props: _extends({}, menuProps, {\n        style: popper.styles\n      }),\n      arrowProps: {\n        ref: attachArrowRef,\n        style: popper.arrowStyles\n      }\n    });\n  }\n\n  useRootClose(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !(menu && show)\n  });\n  return menu;\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Menu element. The `props`\n   * argument should spread through to **a component that can accept a ref**.\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   alignEnd: boolean,\n   *   close: (?SyntheticEvent) => void,\n   *   placement: Placement,\n   *   outOfBoundaries: ?boolean,\n   *   scheduleUpdate: () => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *     aria-labelledby: ?string\n   *   },\n   *   arrowProps: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Controls the visible state of the menu, generally this is\n   * provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu to the 'end' of it's placement position.\n   * Generally this is provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Enables the Popper.js `flip` modifier, allowing the Dropdown to\n   * automatically adjust it's placement in case of overlap with the viewport or toggle.\n   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info\n   */\n  flip: PropTypes.bool,\n  usePopper: PropTypes.oneOf([true, false]),\n\n  /**\n   * A set of popper options and props passed directly to react-popper's Popper component.\n   */\n  popperConfig: PropTypes.object,\n\n  /**\n   * Override the default event used by RootCloseWrapper.\n   */\n  rootCloseEvent: PropTypes.string\n};\nvar defaultProps = {\n  usePopper: true\n};\n\nfunction DropdownMenu(_ref) {\n  var children = _ref.children,\n      options = _objectWithoutPropertiesLoose(_ref, [\"children\"]);\n\n  var args = useDropdownMenu(options);\n  return args.hasShown ? children(args) : null;\n}\n\nDropdownMenu.displayName = 'ReactOverlaysDropdownMenu';\nDropdownMenu.propTypes = propTypes;\nDropdownMenu.defaultProps = defaultProps;\n/** @component */\n\nexport default DropdownMenu;","import PropTypes from 'prop-types';\nimport { useContext } from 'react';\nimport DropdownContext from './DropdownContext';\n/**\n * Wires up Dropdown toggle functinality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n */\n\nexport function useDropdownToggle() {\n  var _useContext = useContext(DropdownContext),\n      show = _useContext.show,\n      toggle = _useContext.toggle,\n      setToggle = _useContext.setToggle;\n\n  return [{\n    ref: setToggle,\n    'aria-haspopup': true,\n    'aria-expanded': !!show\n  }, {\n    show: show,\n    toggle: toggle\n  }];\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Toggle element. The `props`\n   * argument should spread through to **a component that can accept a ref**. Use\n   * the `onToggle` argument to toggle the menu open or closed\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   toggle: (show: boolean) => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     aria-haspopup: true\n   *     aria-expanded: boolean\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired\n};\n\nfunction DropdownToggle(_ref) {\n  var children = _ref.children;\n\n  var _useDropdownToggle = useDropdownToggle(),\n      props = _useDropdownToggle[0],\n      _useDropdownToggle$ = _useDropdownToggle[1],\n      show = _useDropdownToggle$.show,\n      toggle = _useDropdownToggle$.toggle;\n\n  return children({\n    show: show,\n    toggle: toggle,\n    props: props\n  });\n}\n\nDropdownToggle.displayName = 'ReactOverlaysDropdownToggle';\nDropdownToggle.propTypes = propTypes;\n/** @component */\n\nexport default DropdownToggle;","import matches from 'dom-helpers/matches';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport React, { useCallback, useRef, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useUncontrolled } from 'uncontrollable';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nvar propTypes = {\n  /**\n   * A render prop that returns the root dropdown element. The `props`\n   * argument should spread through to an element containing _both_ the\n   * menu and toggle in order to handle keyboard events for focus management.\n   *\n   * @type {Function ({\n   *   props: {\n   *     onKeyDown: (SyntheticEvent) => void,\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Determines the direction and location of the Menu in relation to it's Toggle.\n   */\n  drop: PropTypes.oneOf(['up', 'left', 'right', 'down']),\n\n  /**\n   * Controls the focus behavior for when the Dropdown is opened. Set to\n   * `true` to always focus the first menu item, `keyboard` to focus only when\n   * navigating via the keyboard, or `false` to disable completely\n   *\n   * The Default behavior is `false` **unless** the Menu has a `role=\"menu\"`\n   * where it will default to `keyboard` to match the recommended [ARIA Authoring practices](https://www.w3.org/TR/wai-aria-practices-1.1/#menubutton).\n   */\n  focusFirstItemOnShow: PropTypes.oneOf([false, true, 'keyboard']),\n\n  /**\n   * A css slector string that will return __focusable__ menu items.\n   * Selectors should be relative to the menu component:\n   * e.g. ` > li:not('.disabled')`\n   */\n  itemSelector: PropTypes.string.isRequired,\n\n  /**\n   * Align the menu to the 'end' side of the placement side of the Dropdown toggle. The default placement is `top-start` or `bottom-start`.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Whether or not the Dropdown is visible.\n   *\n   * @controllable onToggle\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Sets the initial show position of the Dropdown.\n   */\n  defaultShow: PropTypes.bool,\n\n  /**\n   * A callback fired when the Dropdown wishes to change visibility. Called with the requested\n   * `show` value, the DOM event, and the source that fired it: `'click'`,`'keydown'`,`'rootClose'`, or `'select'`.\n   *\n   * ```js\n   * function(\n   *   isOpen: boolean,\n   *   event: SyntheticEvent,\n   * ): void\n   * ```\n   *\n   * @controllable show\n   */\n  onToggle: PropTypes.func\n};\nvar defaultProps = {\n  itemSelector: '* > *'\n};\n/**\n * `Dropdown` is set of structural components for building, accessible dropdown menus with close-on-click,\n * keyboard navigation, and correct focus handling. As with all the react-overlay's\n * components its BYOS (bring your own styles). Dropdown is primarily\n * built from three base components, you should compose to build your Dropdowns.\n *\n * - `Dropdown`, which wraps the menu and toggle, and handles keyboard navigation\n * - `Dropdown.Toggle` generally a button that triggers the menu opening\n * - `Dropdown.Menu` The overlaid, menu, positioned to the toggle with PopperJs\n */\n\nfunction Dropdown(_ref) {\n  var drop = _ref.drop,\n      alignEnd = _ref.alignEnd,\n      defaultShow = _ref.defaultShow,\n      rawShow = _ref.show,\n      rawOnToggle = _ref.onToggle,\n      itemSelector = _ref.itemSelector,\n      focusFirstItemOnShow = _ref.focusFirstItemOnShow,\n      children = _ref.children;\n  var forceUpdate = useForceUpdate();\n\n  var _useUncontrolled = useUncontrolled({\n    defaultShow: defaultShow,\n    show: rawShow,\n    onToggle: rawOnToggle\n  }, {\n    show: 'onToggle'\n  }),\n      show = _useUncontrolled.show,\n      onToggle = _useUncontrolled.onToggle;\n\n  var _useCallbackRef = useCallbackRef(),\n      toggleElement = _useCallbackRef[0],\n      setToggle = _useCallbackRef[1]; // We use normal refs instead of useCallbackRef in order to populate the\n  // the value as quickly as possible, otherwise the effect to focus the element\n  // may run before the state value is set\n\n\n  var menuRef = useRef();\n  var menuElement = menuRef.current;\n  var setMenu = useCallback(function (ref) {\n    menuRef.current = ref; // ensure that a menu set triggers an update for consumers\n\n    forceUpdate();\n  }, [forceUpdate]);\n  var lastShow = usePrevious(show);\n  var lastSourceEvent = useRef(null);\n  var focusInDropdown = useRef(false);\n  var toggle = useCallback(function (event) {\n    onToggle(!show, event);\n  }, [onToggle, show]);\n  var context = useMemo(function () {\n    return {\n      toggle: toggle,\n      drop: drop,\n      show: show,\n      alignEnd: alignEnd,\n      menuElement: menuElement,\n      toggleElement: toggleElement,\n      setMenu: setMenu,\n      setToggle: setToggle\n    };\n  }, [toggle, drop, show, alignEnd, menuElement, toggleElement, setMenu, setToggle]);\n\n  if (menuElement && lastShow && !show) {\n    focusInDropdown.current = menuElement.contains(document.activeElement);\n  }\n\n  var focusToggle = useEventCallback(function () {\n    if (toggleElement && toggleElement.focus) {\n      toggleElement.focus();\n    }\n  });\n  var maybeFocusFirst = useEventCallback(function () {\n    var type = lastSourceEvent.current;\n    var focusType = focusFirstItemOnShow;\n\n    if (focusType == null) {\n      focusType = menuRef.current && matches(menuRef.current, '[role=menu]') ? 'keyboard' : false;\n    }\n\n    if (focusType === false || focusType === 'keyboard' && !/^key.+$/.test(type)) {\n      return;\n    }\n\n    var first = qsa(menuRef.current, itemSelector)[0];\n    if (first && first.focus) first.focus();\n  });\n  useEffect(function () {\n    if (show) maybeFocusFirst();else if (focusInDropdown.current) {\n      focusInDropdown.current = false;\n      focusToggle();\n    } // only `show` should be changing\n  }, [show, focusInDropdown, focusToggle, maybeFocusFirst]);\n  useEffect(function () {\n    lastSourceEvent.current = null;\n  });\n\n  var getNextFocusedChild = function getNextFocusedChild(current, offset) {\n    if (!menuRef.current) return null;\n    var items = qsa(menuRef.current, itemSelector);\n    var index = items.indexOf(current) + offset;\n    index = Math.max(0, Math.min(index, items.length));\n    return items[index];\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var key = event.key,\n        target = event.target; // Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400\n    // in inscrutability\n\n    var isInput = /input|textarea/i.test(target.tagName);\n\n    if (isInput && (key === ' ' || key !== 'Escape' && menuRef.current && menuRef.current.contains(target))) {\n      return;\n    }\n\n    lastSourceEvent.current = event.type;\n\n    switch (key) {\n      case 'ArrowUp':\n        {\n          var next = getNextFocusedChild(target, -1);\n          if (next && next.focus) next.focus();\n          event.preventDefault();\n          return;\n        }\n\n      case 'ArrowDown':\n        event.preventDefault();\n\n        if (!show) {\n          toggle(event);\n        } else {\n          var _next = getNextFocusedChild(target, 1);\n\n          if (_next && _next.focus) _next.focus();\n        }\n\n        return;\n\n      case 'Escape':\n      case 'Tab':\n        onToggle(false, event);\n        break;\n\n      default:\n    }\n  };\n\n  return React.createElement(DropdownContext.Provider, {\n    value: context\n  }, children({\n    props: {\n      onKeyDown: handleKeyDown\n    }\n  }));\n}\n\nDropdown.displayName = 'ReactOverlaysDropdown';\nDropdown.propTypes = propTypes;\nDropdown.defaultProps = defaultProps;\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nexport default Dropdown;","import { useReducer } from 'react';\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\n\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are stricting equal to the last state value\n  var _useReducer = useReducer(function (state) {\n    return !state;\n  }, false),\n      dispatch = _useReducer[1];\n\n  return dispatch;\n}","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","import React from 'react';\nexport default React.createContext(null);","import invariant from 'invariant';\nimport { useCallback } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nexport default function useWrappedRefWithWarning(ref, componentName) {\n  if (!(process.env.NODE_ENV !== \"production\")) return ref; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  var warningRef = useCallback(function (refValue) {\n    !(refValue == null || !refValue.isReactComponent) ? process.env.NODE_ENV !== \"production\" ? invariant(false, componentName + \" injected a ref to a provided `as` component that resolved to a component instance instead of a DOM element. \" + 'Use `React.forwardRef` to provide the injected ref to the class component as a prop in order to pass it directly to a DOM element') : invariant(false) : void 0;\n  }, [componentName]); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  return useMergedRefs(warningRef, ref);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useDropdownMenu } from 'react-overlays/DropdownMenu';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nvar defaultProps = {\n  alignRight: false,\n  flip: true\n};\nvar DropdownMenu = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      alignRight = _ref.alignRight,\n      rootCloseEvent = _ref.rootCloseEvent,\n      flip = _ref.flip,\n      popperConfig = _ref.popperConfig,\n      showProps = _ref.show,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"alignRight\", \"rootCloseEvent\", \"flip\", \"popperConfig\", \"show\", \"as\"]);\n\n  var isNavbar = useContext(NavbarContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n\n  var _useDropdownMenu = useDropdownMenu({\n    flip: flip,\n    popperConfig: popperConfig,\n    rootCloseEvent: rootCloseEvent,\n    show: showProps,\n    alignEnd: alignRight,\n    usePopper: !isNavbar\n  }),\n      hasShown = _useDropdownMenu.hasShown,\n      placement = _useDropdownMenu.placement,\n      show = _useDropdownMenu.show,\n      alignEnd = _useDropdownMenu.alignEnd,\n      close = _useDropdownMenu.close,\n      menuProps = _useDropdownMenu.props;\n\n  menuProps.ref = useMergedRefs(menuProps.ref, useWrappedRefWithWarning(ref, 'DropdownMenu'));\n  if (!hasShown) return null; // For custom components provide additional, non-DOM, props;\n\n  if (typeof Component !== 'string') {\n    menuProps.show = show;\n    menuProps.close = close;\n    menuProps.alignRight = alignEnd;\n  }\n\n  var style = props.style;\n\n  if (placement) {\n    // we don't need the default popper style,\n    // menus are display: none when not shown.\n    style = _extends({}, style, {}, menuProps.style);\n    props['x-placement'] = placement;\n  }\n\n  return React.createElement(Component, _extends({}, props, menuProps, {\n    style: style,\n    className: classNames(className, prefix, show && 'show', alignEnd && prefix + \"-right\")\n  }));\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nexport default DropdownMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport isRequiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport React from 'react';\nimport { useDropdownToggle } from 'react-overlays/DropdownToggle';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nvar DropdownToggle = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      split = _ref.split,\n      className = _ref.className,\n      children = _ref.children,\n      childBsPrefix = _ref.childBsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? Button : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"split\", \"className\", \"children\", \"childBsPrefix\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n\n  var _useDropdownToggle = useDropdownToggle(),\n      toggleProps = _useDropdownToggle[0],\n      toggle = _useDropdownToggle[1].toggle;\n\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n\n  return React.createElement(Component, _extends({\n    onClick: toggle,\n    className: classNames(className, prefix, split && prefix + \"-split\")\n  }, toggleProps, props), children);\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport BaseDropdown from 'react-overlays/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownItem from './DropdownItem';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport SelectableContext from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nvar defaultProps = {\n  navbar: false\n};\nvar Dropdown = React.forwardRef(function (uncontrolledProps, ref) {\n  var _useUncontrolled = useUncontrolled(uncontrolledProps, {\n    show: 'onToggle'\n  }),\n      bsPrefix = _useUncontrolled.bsPrefix,\n      drop = _useUncontrolled.drop,\n      show = _useUncontrolled.show,\n      className = _useUncontrolled.className,\n      alignRight = _useUncontrolled.alignRight,\n      onSelect = _useUncontrolled.onSelect,\n      onToggle = _useUncontrolled.onToggle,\n      focusFirstItemOnShow = _useUncontrolled.focusFirstItemOnShow,\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      _4 = _useUncontrolled.navbar,\n      props = _objectWithoutPropertiesLoose(_useUncontrolled, [\"bsPrefix\", \"drop\", \"show\", \"className\", \"alignRight\", \"onSelect\", \"onToggle\", \"focusFirstItemOnShow\", \"as\", \"navbar\"]);\n\n  var onSelectCtx = useContext(SelectableContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  var handleToggle = useEventCallback(function (nextShow, event, source) {\n    if (source === void 0) {\n      source = event.type;\n    }\n\n    if (event.currentTarget === document) source = 'rootClose';\n    onToggle(nextShow, event, {\n      source: source\n    });\n  });\n  var handleSelect = useEventCallback(function (key, event) {\n    if (onSelectCtx) onSelectCtx(key, event);\n    if (onSelect) onSelect(key, event);\n    handleToggle(false, event, 'select');\n  });\n  return React.createElement(SelectableContext.Provider, {\n    value: handleSelect\n  }, React.createElement(BaseDropdown, {\n    drop: drop,\n    show: show,\n    alignEnd: alignRight,\n    onToggle: handleToggle,\n    focusFirstItemOnShow: focusFirstItemOnShow,\n    itemSelector: \".\" + prefix + \"-item:not(.disabled):not(:disabled)\"\n  }, function (_ref) {\n    var dropdownProps = _ref.props;\n    return React.createElement(Component, _extends({}, props, dropdownProps, {\n      ref: ref,\n      className: classNames(className, show && 'show', (!drop || drop === 'down') && prefix, drop === 'up' && 'dropup', drop === 'right' && 'dropright', drop === 'left' && 'dropleft')\n    }));\n  }));\n});\nDropdown.displayName = 'Dropdown';\nDropdown.defaultProps = defaultProps;\nDropdown.Toggle = DropdownToggle;\nDropdown.Menu = DropdownMenu;\nDropdown.Item = DropdownItem;\nDropdown.Header = createWithBsPrefix('dropdown-header', {\n  defaultProps: {\n    role: 'heading'\n  }\n});\nDropdown.Divider = createWithBsPrefix('dropdown-divider', {\n  defaultProps: {\n    role: 'separator'\n  }\n});\nexport default Dropdown;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nvar propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string|number}\n   * @required\n   */\n  id: PropTypes.any,\n\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`.\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu related props are passed to the `Dropdown.Menu`\n */\n\nvar DropdownButton = React.forwardRef(function (_ref, ref) {\n  var title = _ref.title,\n      children = _ref.children,\n      bsPrefix = _ref.bsPrefix,\n      rootCloseEvent = _ref.rootCloseEvent,\n      variant = _ref.variant,\n      size = _ref.size,\n      menuRole = _ref.menuRole,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      id = _ref.id,\n      props = _objectWithoutPropertiesLoose(_ref, [\"title\", \"children\", \"bsPrefix\", \"rootCloseEvent\", \"variant\", \"size\", \"menuRole\", \"disabled\", \"href\", \"id\"]);\n\n  return React.createElement(Dropdown, _extends({\n    ref: ref\n  }, props), React.createElement(Dropdown.Toggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix\n  }, title), React.createElement(Dropdown.Menu, {\n    role: menuRole,\n    rootCloseEvent: rootCloseEvent\n  }, children));\n});\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;"],"sourceRoot":""}