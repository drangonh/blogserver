{"version":3,"sources":["components/home/ListItem.js","components/home/SuspendBtn.js","page/home/HomeContent.js","page/home/index.js","axios/index.js"],"names":["React","Component","SuspendBtn","props","addType","suspendBtn","publish","setState","preState","title","state","popoverLeft","Popover","id","className","Button","onClick","this","OverlayTrigger","rootClose","trigger","placement","overlay","DeleteModal","Modal","size","aria-labelledby","centered","Header","closeButton","Title","Body","Footer","e","delArticle","HomeContent","getList","a","languageId","params","get","res","data","list","setModalShow","modalShow","stopPropagation","openPage","item","edit","history","push","pathname","types","contentId","post","delItem","nextProps","languageContent","map","index","key","source","brief","skipHtml","htmlMode","escapeHtml","plugins","toc","show","onHide","App","inject","observer","header","person","selType","length","showModal","commit","info","content","languageTitle","result","handleChange","p1","target","value","changeContent","changeSelType","renderModal","FormControl","type","placeholder","onChange","BaseComponent","url","Promise","resolve","reject","axios","then","catch","err","defaults","baseURL","withCredentials","timeout","headers","interceptors","request","use","config","error","response","status"],"mappings":"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","file":"static/js/6.a3359d19.chunk.js","sourcesContent":["import React from 'react';\nimport './listItem.scss';\nimport PropTypes from 'prop-types'\n\nclass ListItem extends React.Component {\n    static propTypes = {\n        item: PropTypes.object.isRequired\n    }\n\n    render() {\n        const {item} = this.props;\n        return (\n            <div onSelect={this.openPageList} className=\"listItem\">\n                <div className={\"title\"}>\n                    {item.languageTitle}\n                </div>\n\n                <div className={\"content\"}>\n                    {item.languageContent}\n                </div>\n            </div>\n        );\n    }\n\n    //跳转到指定语言分类的文章列表\n    openPageList = () => {\n        this.props.history({\n            pathname: \"\",\n            state: {}\n        })\n    }\n}\n\nexport default ListItem;\n","import React from 'react';\nimport './SuspendBtn.scss';\nimport PropTypes from \"prop-types\"\nimport {Button, OverlayTrigger, Popover,Modal} from 'react-bootstrap';\n\nclass SuspendBtn extends React.Component {\n    static  propTypes = {\n        suspendBtn: PropTypes.func.isRequired,\n        publish: PropTypes.func.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: \"开门\"\n        };\n        this.popoverLeft = (\n            <Popover id=\"popover-positioned-left\" className={\"leftPopover\"} title=\"\">\n                <Button onClick={this.addType}>新增分类</Button>\n                <Button onClick={this.publish}>发布文章</Button>\n            </Popover>\n        );\n    }\n\n    addType = () => {\n        const {suspendBtn} = this.props;\n        suspendBtn && suspendBtn()\n    };\n\n    publish = () => {\n        const {publish} = this.props;\n        publish && publish()\n    };\n\n    suspendBtn = () => {\n        this.setState((preState, props) => {\n            return {\n                title: preState.title == \"开门\" ? \"关门\" : \"开门\"\n            }\n        });\n    }\n\n    render() {\n        const {title} = this.state;\n        return (\n            <div onClick={this.suspendBtn} className=\"suspendBtn\">\n                <OverlayTrigger rootClose={true} trigger=\"click\" placement=\"left\" overlay={this.popoverLeft}>\n                    <Button className={\"button\"}>{title}</Button>\n                </OverlayTrigger>\n            </div>\n        );\n    }\n}\n\nexport default SuspendBtn;\n","/**\n * 首页\n * author:dragonh\n * time:2020/4/30\n **/\nimport React from 'react';\nimport './index.scss';\nimport BaseComponent from \"../../components/common/BaseComponent\";\nimport {Alert, Button, Modal} from \"react-bootstrap\";\nimport {get, post} from \"../../axios\";\nimport {inject, observer} from \"mobx-react\";\nimport toc from \"remark-toc\";\nimport Markdown from \"react-markdown\";\n\nclass HomeContent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],\n            modalShow: false,\n            languageId: \"\"\n        }\n\n        this.delItem = {}\n    }\n\n    componentDidMount() {\n\n    }\n\n    // shouldComponentUpdate(nextProps, nextState) {\n    //     // return nextProps.languageId != this.state.languageId\n    // }\n\n    componentWillReceiveProps(nextProps) {\n        const {languageId} = nextProps;\n\n        if (nextProps.languageId != this.state.languageId){\n            this.setState({\n                languageId\n            }, () => {\n                this.getList()\n            })\n        }\n\n    }\n\n    componentWillUnmount() {\n        this.delItem = {}\n    }\n\n    getList = async () => {\n        const {languageId} = this.state;\n\n        const params = {\n            languageId: languageId\n        };\n\n        const res = await get(\"getArticleList\", params);\n\n        console.log(res.data)\n        if (res.data) {\n            this.setState({\n                list: res.data,\n            })\n        } else {\n            this.setState({\n                list: [],\n            })\n        }\n    };\n\n    setModalShow = (res, e) => {\n        this.setState({\n            modalShow: res\n        });\n        e && e.stopPropagation()\n    };\n\n    //跳转到文章详情页\n    openPage = (item, edit) => {\n        this.props.history.push({\n            pathname: \"/markdown\",\n            state: {\n                list: this.props.types,\n                publish: edit ? true : false, //编辑文章是显示发布样式\n                item: item,\n                edit: edit\n            }\n        });\n    };\n\n    // 删除文章\n    delArticle = async (item, e) => {\n        const params = {\n            contentId: item.contentId\n        };\n\n        const res = await post(\"deleteArticle\", params);\n\n        if (res.data) {\n            this.setModalShow(false, e)\n\n            this.getList()\n        }\n\n    };\n\n    render() {\n        const {languageContent} = this.props;\n        const {list, modalShow} = this.state;\n\n        return (\n            <div className={\"contentRight\"}>\n                <div className={\"languageContent\"}>\n                    简介： {languageContent}\n                </div>\n\n                {\n                    list.map((item, index) => {\n                        return (\n                            <div key={item.contentId} className={\"content\"} onClick={() => this.openPage(item, false)}>\n                                <Markdown\n                                    source={item.brief}\n                                    skipHtml={this.state.htmlMode === 'skip'}\n                                    escapeHtml={this.state.htmlMode === 'escape'}\n                                    plugins={[toc]}\n                                />\n\n                                <div className={\"contentBotBn\"}>\n                                    <div className={\"editPage editBtn\"} onClick={() => this.openPage(item, true)}>\n                                        编辑\n                                    </div>\n\n                                    <div className={\"editPage delBtn\"} onClick={(e) => {\n                                        this.delItem = item;\n                                        this.setModalShow(true, e)\n                                    }}>\n                                        删除\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n\n                <DeleteModal\n                    show={modalShow}\n                    onHide={(e) => {\n                        this.setModalShow(false, e)\n                    }}\n                    delArticle={(e) => this.delArticle(this.delItem, e)}\n                />\n\n            </div>\n        );\n    }\n\n}\n\nfunction DeleteModal(props) {\n    return (\n        <Modal\n            {...props}\n            size=\"sm\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    提醒\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <p>\n                    您将要删除这篇文章，确定删除吗？\n                </p>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={(e) => {\n                    props.delArticle && props.delArticle()\n                }}>确定</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nexport default HomeContent;\n","/**\n * 首页\n * author:dragonh\n * time:2020/4/30\n **/\nimport React from 'react';\nimport './index.scss';\nimport Header from \"../../components/common/Header\";\nimport BaseComponent from \"../../components/common/BaseComponent\";\nimport ListItem from \"../../components/home/ListItem\";\nimport SuspendBtn from \"../../components/home/SuspendBtn\";\nimport {Button, FormControl, Modal, Alert} from \"react-bootstrap\";\nimport {post, get} from \"../../axios\";\nimport {inject, observer} from \"mobx-react\";\nimport HomeContent from \"./HomeContent\";\n\n// 观察者\n@inject('header')\n@observer\nclass App extends BaseComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showModal: false,\n            title: \"\",\n            content: \"\",\n            list: [],\n            selType: {}\n        }\n    }\n\n    componentDidMount() {\n        this.getList()\n    }\n\n    getList = async () => {\n        const {header: {person}} = this.props;\n\n        const params = {};\n        const res = await get(\"getLanguageList\", params);\n\n        if (res.data) {\n            this.setState({\n                list: res.data,\n                selType: res.data.length != 0 ? res.data[0] : {}\n            })\n        }\n    };\n\n    suspendBtn = () => {\n        this.setState({\n            showModal: !this.state.showModal\n        })\n    };\n\n    commit = async () => {\n        const {header: {person}} = this.props;\n\n        if (person.info) {\n            const params = {\n                languageContent: this.state.content,\n                languageTitle: this.state.title,\n            };\n\n            const res = await post(\"editLanguage\", params)\n            if (res.data && res.data.result) {\n                this.suspendBtn()\n                this.getList()\n            }\n        } else {\n            this.props.history.push(\"/login\");\n        }\n    };\n\n    handleChange = (p1) => {\n        this.setState({\n            title: p1.target.value\n        })\n    };\n\n    changeContent = (p1) => {\n        this.setState({\n            content: p1.target.value\n        })\n    };\n\n    publish = () => {\n        this.props.history.push({\n            pathname: \"/markdown\",\n            state: {\n                list: this.state.list,\n                publish: true\n            }\n        });\n    };\n\n    //改变选中的语言\n    changeSelType = (item) => {\n        this.setState({\n            selType: item\n        })\n    };\n\n    render() {\n        const {list, selType} = this.state;\n        return (\n            <div className=\"wrap\">\n\n                <Header {...this.props}/>\n\n                <div className={\"homeContent\"}>\n\n                    <div className={\"contentLeft\"}>\n\n\n                        {list.map((item, index) => {\n                            return (\n                                <div onClick={() => this.changeSelType(item)}\n                                     className={selType.languageId == item.languageId ? \"leftItem selLeftItem\" : \"leftItem\"}\n                                     key={item.languageId}>\n                                    {item.languageTitle}\n                                </div>\n                            )\n                        })}\n                    </div>\n\n                    <HomeContent\n                        types={list}\n                        history={this.props.history}\n                        languageContent={selType.languageContent}\n                        languageId={selType.languageId}/>\n\n                </div>\n\n                {/*悬浮按钮*/}\n                <SuspendBtn\n                    publish={this.publish}\n                    suspendBtn={this.suspendBtn}/>\n\n                {this.renderModal()}\n            </div>\n        );\n    }\n\n    renderModal() {\n        return (\n            <Modal show={this.state.showModal} onHide={this.suspendBtn}>\n                <Modal.Header closeButton>\n                    <Modal.Title>新增分类</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <h5>分类名称</h5>\n                    <FormControl\n                        className={\"type\"}\n                        type=\"text\"\n                        value={this.state.title}\n                        placeholder=\"请输入分类名称\"\n                        onChange={this.handleChange}\n                    />\n\n                    <h5>分类介绍</h5>\n\n                    <textarea\n                        value={this.state.content}\n                        onChange={this.changeContent}\n                        className=\"introduce\"\n                        placeholder={\"请输入分类介绍\"}\n                    />\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button onClick={this.commit}>确定</Button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n}\n\nexport default App;\n","/**axios封装\n * 请求拦截、相应拦截、错误统一处理\n */\nimport axios from 'axios';\nimport QS from 'qs';\n// import {Toast} from 'vant';\n// import store from '../store/index'\n\nconst development = \"http://127.0.0.1:8888/\";\nconst production = \"https://www.dontheway.com:8880/\";\n\n// 环境的切换\nif (process.env.NODE_ENV == 'development') {\n    axios.defaults.baseURL = development;\n} else if (process.env.NODE_ENV == 'debug') {\n    axios.defaults.baseURL = '';\n} else if (process.env.NODE_ENV == 'production') {\n    axios.defaults.baseURL = production;\n}\n\n// 允许携带cookie，跨域设置。跨域的时候会造成无法携带cookie，这时需要允许跨域。同时后端也要进行配置\naxios.defaults.withCredentials = true;\n\n// 请求超时时间\naxios.defaults.timeout = 10000;\n\n// 请求头设置，post请求的时候必须设置'Content-Type': 'application/x-www-form-urlencoded'\n//以下两种写法都可以\naxios.defaults.headers = {\n    'Content-Type': 'application/x-www-form-urlencoded'\n};\n\n// post请求头\n// axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8';\n\n// 请求拦截器\naxios.interceptors.request.use(\n    config => {\n        // 每次发送请求之前判断是否存在token，如果存在，则统一在http请求的header都加上token，不用每次请求都手动添加了\n        // 即使本地存在token，也有可能token是过期的，所以在响应拦截器中要对返回状态进行判断\n        // const token = store.state.token;\n        const token = \"\";\n        token && (config.headers.Authorization = token);\n        return config;\n    },\n    error => {\n        return Promise.error(error);\n    })\n\n// 响应拦截器\naxios.interceptors.response.use(\n    response => {\n        if (response.status === 200) {\n            return Promise.resolve(response);\n        } else {\n            return Promise.reject(response);\n        }\n    },\n    // 服务器状态码不是200的情况\n    error => {\n        if (error.response.status) {\n            switch (error.response.status) {\n                // 401: 未登录\n                // 未登录则跳转登录页面，并携带当前页面的路径\n                // 在登录成功后返回当前页面，这一步需要在登录页操作。\n                case 401:\n\n                    // router.replace({\n                    //     path: '/login',\n                    //     query: {redirect: router.currentRoute.fullPath}\n                    // });\n                    break;\n                // 403 token过期\n                // 登录过期对用户进行提示\n                // 清除本地token和清空vuex中token对象\n                // 跳转登录页面\n                case 403:\n                    // Toast({\n                    //     message: '登录过期，请重新登录',\n                    //     duration: 1000,\n                    //     forbidClick: true\n                    // });\n                    // // 清除token\n                    // localStorage.removeItem('token');\n                    // store.commit('loginSuccess', null);\n                    // // 跳转登录页面，并将要浏览的页面fullPath传过去，登录成功后跳转需要访问的页面\n                    // setTimeout(() => {\n                    //     router.replace({\n                    //         path: '/login',\n                    //         query: {\n                    //             redirect: router.currentRoute.fullPath\n                    //         }\n                    //     });\n                    // }, 1000);\n                    break;\n                // 404请求不存在\n                case 404:\n                    // Toast({\n                    //     message: '网络请求不存在',\n                    //     duration: 1500,\n                    //     forbidClick: true\n                    // });\n                    break;\n                // 其他错误，直接抛出错误提示\n                default:\n                // Toast({\n                //     message: error.response.data.message,\n                //     duration: 1500,\n                //     forbidClick: true\n                // });\n            }\n            return Promise.reject(error.response);\n        }\n    }\n);\n\n/**\n * get方法，对应get请求\n * @param {String} url [请求的url地址]\n * @param {Object} params [请求时携带的参数]\n */\nexport function get(url, params) {\n    return new Promise((resolve, reject) => {\n        axios.get(url, {\n            params: params,\n        })\n            .then(res => {\n                console.log(\"请求参数\", params);\n                console.log(\"请求地址\", url);\n                console.log(\"请求结果\", res);\n                resolve(res.data);\n            })\n            .catch(err => {\n                console.log(\"请求错误\", err);\n                reject(err.data)\n            })\n    });\n}\n\n/**\n * post方法，对应post请求\n * @param {String} url [请求的url地址]\n * @param {Object} params [请求时携带的参数]\n */\nexport function post(url, params) {\n    return new Promise((resolve, reject) => {\n        //axios的默认Content-Type是 application/json;charset=utf-8\n        //params= QS.stringify(params);   这会让参数拼接在URL后面\n        //如果后端参数是body中拿到的，那么需要设置Content-Type': 'application/x-www-form-urlencoded'\n        axios.post(url, params)\n            .then(res => {\n                console.log(\"请求参数\", params);\n                console.log(\"请求地址\", url);\n                console.log(\"请求结果\", res);\n                resolve(res.data);\n            })\n            .catch(err => {\n                console.log(\"请求错误\", err);\n                reject(err.data)\n            })\n    });\n}\n"],"sourceRoot":""}