{"version":3,"sources":["page/home/ArticleDetail.js","axios/index.js","static/image/defualt.jpeg","components/common/CommonLeft.js"],"names":["App","inject","observer","props","getDetail","a","data","history","location","search","paramsString","substring","searchParams","URLSearchParams","languageId","get","contentId","params","res","setState","detail","state","this","id","className","storeTitle","languageTitle","source","content","skipHtml","htmlMode","escapeHtml","plugins","toc","BaseComponent","url","Promise","resolve","reject","axios","then","catch","err","post","defaults","baseURL","withCredentials","timeout","headers","interceptors","request","use","config","error","response","status","module","exports","CommonLeft","changeInfo","push","pathname","logout","header","handleClick","e","target","show","art","lag","popoverBottom","title","onClick","getLagAndArtCnt","article","language","person","trigger","placement","overlay","src","uid","avatar","require","nickName","description","React","Component"],"mappings":"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","file":"static/js/8.54614df9.chunk.js","sourcesContent":["/**\n * 首页\n * author:dragonh\n * time:2020/4/30\n **/\nimport React from 'react';\nimport './ArticleDetail.scss';\nimport BaseComponent from \"../../components/common/BaseComponent\";\nimport {post, get} from \"../../axios\";\nimport {inject, observer} from \"mobx-react\";\nimport CommonLeft from \"../../components/common/CommonLeft\";\nimport Markdown from \"react-markdown\";\nimport toc from \"remark-toc\";\n\n// 观察者\n@inject('header')\n@observer\nclass App extends BaseComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            detail: {}\n        }\n\n    }\n\n    componentDidMount() {\n        this.getDetail()\n    }\n\n    getDetail = async () => {\n        const data = this.props.history.location.search  //地址栏截取\n        const paramsString = data.substring(1)\n        console.log(paramsString)\n\n        const searchParams = new URLSearchParams(paramsString)\n        const languageId = searchParams.get('languageId')\n        const contentId = searchParams.get('contentId')\n\n        const params = {\n            languageId: languageId,\n            contentId: contentId,\n        };\n\n        const res = await get(\"markdownStore/getArticleDetail\", params)\n        console.log(res.data);\n\n\n        if (res && res.data) {\n            this.setState({\n                detail: res.data,\n            })\n        }\n    };\n\n    render() {\n        const {detail} = this.state;\n        return (\n            <div id=\"articleDetail\">\n                <CommonLeft {...this.props}/>\n\n                <div className={\"right\"}>\n                    <div className={\"box_387X1\"}>\n                        <div className={\"text_388X1\"}>\n                            {detail.storeTitle}\n                        </div>\n\n\n                        <div className={\"box_200\"}>\n                            <div className={\"text_420X1\"}>{detail.languageTitle}</div>\n                        </div>\n\n                        <div className={\"text_393X1\"}>\n                            {/*{detail.content}*/}\n                            <Markdown\n                                className=\"result\"\n                                source={detail.content}\n                                skipHtml={this.state.htmlMode === 'skip'}\n                                escapeHtml={this.state.htmlMode === 'escape'}\n                                plugins={[toc]}\n                            />\n                        </div>\n\n                        <div className={\"box_201\"}>\n                            <div className={\"box_202\"}>\n                                <div className={\"icon_7X1\"}>\n                                    {\"<\"}\n                                </div>\n\n                                <div className={\"text_436X1\"}>上一篇文章标题</div>\n                            </div>\n\n                            <div className={\"box_202\"}>\n                                <div className={\"text_436X1\"}>下一篇文章标题</div>\n\n                                <div className={\"icon_7X1\"}>\n                                    {\">\"}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","/**axios封装\n * 请求拦截、相应拦截、错误统一处理\n */\nimport axios from 'axios';\nimport QS from 'qs';\n// import {Toast} from 'vant';\n// import store from '../store/index'\n\nconst development = \"http://127.0.0.1:8888/blog/\";\nconst production = \"https://www.dontheway.com:80/blog/\";\n\n// 环境的切换\nif (process.env.NODE_ENV == 'development') {\n    axios.defaults.baseURL = development;\n} else if (process.env.NODE_ENV == 'debug') {\n    axios.defaults.baseURL = '';\n} else if (process.env.NODE_ENV == 'production') {\n    axios.defaults.baseURL = production;\n}\n\n// 允许携带cookie，跨域设置。跨域的时候会造成无法携带cookie，这时需要允许跨域。同时后端也要进行配置\naxios.defaults.withCredentials = true;\n\n// 请求超时时间\naxios.defaults.timeout = 10000;\n\n// 请求头设置，post请求的时候必须设置'Content-Type': 'application/x-www-form-urlencoded'\n//以下两种写法都可以\naxios.defaults.headers = {\n    'Content-Type': 'application/x-www-form-urlencoded'\n};\n\n// post请求头\n// axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8';\n\n// 请求拦截器\naxios.interceptors.request.use(\n    config => {\n        // 每次发送请求之前判断是否存在token，如果存在，则统一在http请求的header都加上token，不用每次请求都手动添加了\n        // 即使本地存在token，也有可能token是过期的，所以在响应拦截器中要对返回状态进行判断\n        // const token = store.state.token;\n        const token = \"\";\n        token && (config.headers.Authorization = token);\n        return config;\n    },\n    error => {\n        return Promise.error(error);\n    })\n\n// 响应拦截器\naxios.interceptors.response.use(\n    response => {\n        if (response.status === 200) {\n            return Promise.resolve(response);\n        } else {\n            return Promise.reject(response);\n        }\n    },\n    // 服务器状态码不是200的情况\n    error => {\n        if (error.response.status) {\n            switch (error.response.status) {\n                // 401: 未登录\n                // 未登录则跳转登录页面，并携带当前页面的路径\n                // 在登录成功后返回当前页面，这一步需要在登录页操作。\n                case 401:\n\n                    // router.replace({\n                    //     path: '/login',\n                    //     query: {redirect: router.currentRoute.fullPath}\n                    // });\n                    break;\n                // 403 token过期\n                // 登录过期对用户进行提示\n                // 清除本地token和清空vuex中token对象\n                // 跳转登录页面\n                case 403:\n                    // Toast({\n                    //     message: '登录过期，请重新登录',\n                    //     duration: 1000,\n                    //     forbidClick: true\n                    // });\n                    // // 清除token\n                    // localStorage.removeItem('token');\n                    // store.commit('loginSuccess', null);\n                    // // 跳转登录页面，并将要浏览的页面fullPath传过去，登录成功后跳转需要访问的页面\n                    // setTimeout(() => {\n                    //     router.replace({\n                    //         path: '/login',\n                    //         query: {\n                    //             redirect: router.currentRoute.fullPath\n                    //         }\n                    //     });\n                    // }, 1000);\n                    break;\n                // 404请求不存在\n                case 404:\n                    // Toast({\n                    //     message: '网络请求不存在',\n                    //     duration: 1500,\n                    //     forbidClick: true\n                    // });\n                    break;\n                // 其他错误，直接抛出错误提示\n                default:\n                // Toast({\n                //     message: error.response.data.message,\n                //     duration: 1500,\n                //     forbidClick: true\n                // });\n            }\n            return Promise.reject(error.response);\n        }\n    }\n);\n\n/**\n * get方法，对应get请求\n * @param {String} url [请求的url地址]\n * @param {Object} params [请求时携带的参数]\n */\nexport function get(url, params) {\n    return new Promise((resolve, reject) => {\n        axios.get(url, {\n            params: params,\n        })\n            .then(res => {\n                console.log(\"请求参数\", params);\n                console.log(\"请求地址\", url);\n                console.log(\"请求结果\", res);\n                resolve(res.data);\n            })\n            .catch(err => {\n                console.log(\"请求错误\", err);\n                reject(err.data)\n            })\n    });\n}\n\n/**\n * post方法，对应post请求\n * @param {String} url [请求的url地址]\n * @param {Object} params [请求时携带的参数]\n */\nexport function post(url, params) {\n    return new Promise((resolve, reject) => {\n        //axios的默认Content-Type是 application/json;charset=utf-8\n        //params= QS.stringify(params);   这会让参数拼接在URL后面\n        //如果后端参数是body中拿到的，那么需要设置Content-Type': 'application/x-www-form-urlencoded'\n        axios.post(url, params)\n            .then(res => {\n                console.log(\"请求参数\", params);\n                console.log(\"请求地址\", url);\n                console.log(\"请求结果\", res);\n                resolve(res.data);\n            })\n            .catch(err => {\n                console.log(\"请求错误\", err);\n                reject(err.data)\n            })\n    });\n}\n","module.exports = __webpack_public_path__ + \"static/media/defualt.8e05f6fe.jpeg\";","import React from 'react';\nimport \"./CommonLeft.scss\"\nimport {OverlayTrigger, Popover} from \"react-bootstrap\";\nimport {get} from \"../../axios\";\nimport {inject, observer} from \"mobx-react\";\n\n@inject('header')\n@observer\nclass CommonLeft extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: true,\n            target: null,\n            art: 0,//文章数量\n            lag: 0,//分类数量\n        }\n\n        this.popoverBottom = (\n            <Popover id=\"popover-positioned-bottom\" className={\"loginImage\"} title=\"底部弹出\">\n                <div className={\"box_xx200\"} onClick={this.changeInfo}>修改资料</div>\n                <div className={\"box_xx200\"} onClick={this.logout}>退出登录</div>\n            </Popover>\n        );\n    }\n\n    componentDidMount() {\n        this.getLagAndArtCnt()\n    }\n\n    /*方法说明\n     *@method getLagAndArtCnt\n     *@for CommonLeft\n    */\n    async getLagAndArtCnt() {\n        const res = await get(\"user/getArtAndCatCnt\", {})\n        console.log(res)\n        if (res.data) {\n            this.setState({\n                art: res.data.article,//文章数量\n                lag: res.data.language\n            })\n        }\n    }\n\n    /*方法说明\n     *@method changeInfo:更新用户信息\n     *@for CommonLeft\n     *@param nil\n     *@return nil\n    */\n    changeInfo = () => {\n        this.props.history.push({\n            pathname: \"/updateInfo\",\n        });\n    }\n\n    /*方法说明\n     *@method logout\n     *@for CommonLeft\n     *@param nil\n     *@return nil\n    */\n    logout = () => {\n        get(\"user/logout\", {}).then(res => {\n            const {header} = this.props;\n            header.changeInfo(null)\n            this.props.history.push({\n                pathname: \"/login\",\n            });\n        })\n\n    }\n\n    handleClick = e => {\n        console.log(e.target)\n        this.setState({\n            target: e.target,\n            show: !this.state.show\n        });\n    };\n\n    render() {\n        const {header: {person}} = this.props\n        const {lag, art} = this.state;\n        return (\n            <div id={\"commonLeft\"}>\n\n                <div\n                    onClick={this.handleClick}\n                    className={\"box_278X1\"}>\n\n\n                    <OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={this.popoverBottom}>\n                        <img\n                            src={person && person.uid && person.avatar ? person.avatar : require(\"../../static/image/defualt.jpeg\")}\n                            className={\"photo\"}/>\n                    </OverlayTrigger>\n\n                    <h4>\n                        {person && person.uid ?\n                            person.nickName ? person.nickName : \"请修改个人资料\"\n                            : \"请登录\"}\n                    </h4>\n\n                    <p>\n                        {person && person.uid ? person.description : \"\"}\n                    </p>\n                </div>\n\n                <div className={\"box_275X1\"}>\n                    <div className={\"wrapper_118X1\"}>\n                        <div className={\"text_268X1\"}>{art}</div>\n                        <div className={\"text_269X1\"}>文章</div>\n                    </div>\n\n                    <div className={\"wrapper_118X1\"}>\n                        <div className={\"text_268X1\"}>{lag}</div>\n                        <div className={\"text_269X1\"}>分类</div>\n                    </div>\n\n                    {/*<div className={\"wrapper_118X1\"}>*/}\n                    {/*    <div className={\"text_268X1\"}>1</div>*/}\n                    {/*    <div className={\"text_269X1\"}>Tags</div>*/}\n                    {/*</div>*/}\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default CommonLeft;\n"],"sourceRoot":""}